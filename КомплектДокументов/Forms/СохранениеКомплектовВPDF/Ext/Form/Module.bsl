#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВнешняяОбработкаОбъектСсылка = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ДополнительнаяОбработкаСсылка");
	ИдентификаторКоманды = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ИдентификаторКоманды");
	ИмяПередаваемойФормы = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ИмяФормы");
	ОбъектыНазначения = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ОбъектыНазначения");
	ТипОбъекта = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "МенеджерПечати");
	
	Если НЕ ЗначениеЗаполнено(ОбъектыНазначения)
		ИЛИ НЕ ЗначениеЗаполнено(ИмяПередаваемойФормы) Тогда
		
		ВызватьИсключение НСтр("ru='Непосредственное открытие этой формы не предусмотрено.'");
		
	КонецЕсли;
	
	Если ОбъектыНазначения <> Неопределено Тогда
		Объекты.ЗагрузитьЗначения(ОбъектыНазначения);
		Индекс = 1;
		Для Каждого ОбъектПечати Из Объекты Цикл
			ОбъектПечати.Представление = "Документ_" + Индекс;
			Индекс = Индекс + 1;
		КонецЦикла;
	КонецЕсли;
	
	// Формирования состава печатных форм
	КомандыПечати = УправлениеПечатью.КомандыПечатиФормы(ИмяПередаваемойФормы);
	
	Идентификатор = "";
	Для Каждого КомандаПечати Из КомандыПечати Цикл
		
		Если КомандаПечати.ДополнительныеПараметры.Свойство("НеВыводитьВКомплекте") Тогда
			Продолжить;
		КонецЕсли;
		
		Если КомандаПечати.СкрытаФункциональнымиОпциями Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = КомплектПечатныхФорм.Добавить();
		Если КомандаПечати.ДополнительныеПараметры.Свойство("ИдентификаторВКомплекте") Тогда
			НоваяСтрока.Имя = КомандаПечати.ДополнительныеПараметры.ИдентификаторВКомплекте;
		Иначе
			НоваяСтрока.Имя = КомандаПечати.Идентификатор;
		КонецЕсли;
		НоваяСтрока.МенеджерПечати = КомандаПечати.МенеджерПечати;
		НоваяСтрока.Представление = КомандаПечати.Представление;
		НоваяСтрока.Порядок = КомандаПечати.Порядок;
		
		Если КомандаПечати.МенеджерПечати <> "СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки" Тогда
			Идентификатор = Идентификатор + НоваяСтрока.Имя + ",";
		КонецЕсли;
		
	КонецЦикла;
	
	// Загрузка сохраненных настроек
	Если Идентификатор <> "" Тогда
		Идентификатор = Лев(Идентификатор, СтрДлина(Идентификатор) - 1);
	КонецЕсли;
	
	КлючНастроек = Параметры.МенеджерПечати + "-" + Идентификатор;
	СохраненныеНастройкиПечатныхФорм = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиПечатныхФормКомплект", КлючНастроек, Новый Массив);
	
	ВосстановитьНастройкиПечатныхФорм(СохраненныеНастройкиПечатныхФорм, Параметры.ИмяФормы);
	
	// Отсортируем таблицу печатных форм
	ТаблицаПечатныхФорм = КомплектПечатныхФорм.Выгрузить();
	СортироватьТаблицуПечатныхФормПоУмолчанию(ТаблицаПечатныхФорм);
	КомплектПечатныхФорм.Загрузить(ТаблицаПечатныхФорм);
	Если Объекты.Количество() > 0 Тогда
		Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объекты[0].Значение, "Организация");
	КонецЕсли;

	ЗаполнитьСписокВыбораПапкиДляСохранения(ОбъектыНазначения);
	
	// Если не настроена печать факсимиле
	РезультатПроверки = ПроверитьЗаполнениеПечатиПодписейОрганизации(ОбъектыНазначения, Истина);
	
	УправлениеПечатьюБП.ОформитьВыводРеквизитаподписьИПечать(Элементы.ПечатьИПодписи, Элементы.ГруппаПечатьПодписи, РезультатПроверки);
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	МассивСохраненныхПутей = Элементы.ПутьКФайлам.СписокВыбора.ВыгрузитьЗначения();
	Если МассивСохраненныхПутей.Количество() = 0 Тогда
		ЗаполнитьИсториюВыбораПоУмолчанию();
	Иначе
		// Выберем последний сохраненный путь.
		ПутьКФайлам = МассивСохраненныхПутей[0];
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	УправлениеПечатьюБПКлиент.ОбработкаНавигационнойСсылки(ЭтотОбъект, 
		НавигационнаяСсылкаФорматированнойСтроки,
		СтандартнаяОбработка);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПутьКФайламНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПутьКФайламЗавершение", ЭтотОбъект);
	ДиалогВыбораФайла.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредпросмотрПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыСписок

&НаКлиенте
Процедура КомплектПечатныхФормПечататьПриИзменении(Элемент)
	
	НастройкаПечатнойФормы = ТекущаяНастройкаПечатнойФормы();
	Если НастройкаПечатнойФормы.Печатать И НастройкаПечатнойФормы.Копий = 0 Тогда
		НастройкаПечатнойФормы.Копий = 1;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПроверитьСуществованиеИИзменитьИмяФайла(ИмяФайла, ПервоначальноеИмяФайла="", НомерЭкземпляра = 0)
	
	Файл = Новый Файл(ИмяФайла);
	Если ПустаяСтрока(ПервоначальноеИмяФайла) Тогда
		ПервоначальноеИмяФайла = СтрЗаменить(ИмяФайла, ".pdf", "");
	КонецЕсли;
	Если Файл.Существует() Тогда
		НомерЭкземпляра = НомерЭкземпляра + 1;
		ИмяФайла = СтрШаблон(НСтр("ru='%1 (%2).pdf'"), ПервоначальноеИмяФайла, НомерЭкземпляра);
		ПроверитьСуществованиеИИзменитьИмяФайла(ИмяФайла, ПервоначальноеИмяФайла, НомерЭкземпляра);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьПутьКФайламНаСервере();
	
	Если КомплектПечатныхФорм.НайтиСтроки(Новый Структура("Печатать", Истина)).Количество() > 0 Тогда
		
		ИменаМакетов = ПодготовитьНастройкиДляПечати();
		
		Если Не Предпросмотр Тогда
			
			Для Каждого Документ Из Объекты.ВыгрузитьЗначения() Цикл
				МассивДокументов = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Документ);
				ПараметрыПечати = Новый Структура;
				ПараметрыПечати.Вставить("ФиксированныйКомплект", Истина);
				ПечатныеФормы = УправлениеПечатьюВызовСервера.СформироватьПечатныеФормыДляБыстройПечати(
					ТипОбъекта, ИменаМакетов, МассивДокументов, ПараметрыПечати);
				ДобавитьПодписиИПечати(ПечатныеФормы, Объекты);
				ИмяФайла = ИмяФайла(Документ);
				ПроверитьСуществованиеИИзменитьИмяФайла(ИмяФайла);
				СохранитьФайлПакета(ИмяФайла, ПечатныеФормы.ТабличныеДокументы, Объекты);
				Если ОткрытьФайлыПослеСохранения Тогда
					ЗапуститьПриложение(ИмяФайла);
				КонецЕсли;
			КонецЦикла;
		Иначе
			
			// Получим ключ уникальности открываемой формы.
			КлючУникальности = Строка(Новый УникальныйИдентификатор);
			
			ПараметрыОткрытия = Новый Структура("ИмяМенеджераПечати,ИменаМакетов,ПараметрКоманды,ПараметрыПечати,ПутьКФайлам");
			ПараметрыОткрытия.ИмяМенеджераПечати = ТипОбъекта;
			ПараметрыОткрытия.ИменаМакетов		 = ИменаМакетов;
			ПараметрыОткрытия.ПараметрКоманды	 = Объекты.ВыгрузитьЗначения();
			ПараметрыОткрытия.ПараметрыПечати	 = Новый Структура("ВывестиПечатьИПодписи", ВывестиПечатьИПодписи);
			ПараметрыОткрытия.ПутьКФайлам		 = ПутьКФайлам;
			
			// Откроем форму печати документов.
			ОткрытьФорму("ВнешняяОбработка.КомплектДокументовВPDF.Форма.ПечатьДокументов", ПараметрыОткрытия, ЭтотОбъект, КлючУникальности);
			
		КонецЕсли;
		
		Если Не ПустаяСтрока(КлючНастроек) Тогда
			СохраняемыеНастройкиПечатныхФорм = Новый Массив;
			Для Каждого НастройкаПечати Из КомплектПечатныхФорм Цикл
				СохраняемаяНастройка = Новый Структура("Имя, Копий, Печатать");
				ЗаполнитьЗначенияСвойств(СохраняемаяНастройка, НастройкаПечати);
				СохраняемыеНастройкиПечатныхФорм.Добавить(СохраняемаяНастройка);
			КонецЦикла;
			СохранитьНастройкиПечатныхФорм("НастройкиПечатныхФормКомплект", КлючНастроек, СохраняемыеНастройкиПечатныхФорм);
		КонецЕсли;
		
	Закрыть();
		
	Иначе
		
		ОчиститьСообщения();
		ТекстСообщения = НСтр("ru = 'Выберите хотя бы одну печатную форму для печати.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "КомплектПечатныхФорм");
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область НаличиеФаксимиле

// Собирает данные для проверки заполнения необходимых реквизитов пред печатью с факсимильной подписью.
//
// Параметры:
//  МассивДокументов - Массив - массив ссылок на документы одного типа.
//
// Возвращаемое значение:
//  Структура:
//    * НужноЗаполнить - Булево- нужно заполнить реквизиты.
//    * Организация - СправочникСсылка.Организации - организация документов.
//    * ПредложитьНастроить - Булево - у пользователя достаточно прав для настройки.
//
&НаСервере
Функция ПроверитьЗаполнениеПечатиПодписейОрганизации(МассивДокументов, ФаксимилеДоступноДляВывода)
	
	РезультатПроверки = Новый Структура;
	РезультатПроверки.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	РезультатПроверки.Вставить("НужноЗаполнить", Ложь);
	РезультатПроверки.Вставить("ПредложитьНастроить", Ложь);
	РезультатПроверки.Вставить("ФаксимилеДоступноДляВывода", ФаксимилеДоступноДляВывода);
	
	НужноЗаполнить = НЕ ФаксимилеДоступноДляВывода;
	
	ТаблицаОрганизацийДокументов = ОрганизацииДокументовДляПечати(МассивДокументов);
	
	ОрганизацииДокументов = ТаблицаОрганизацийДокументов.ВыгрузитьКолонку("Организация");
	ОрганизацииДокументов = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ОрганизацииДокументов);
	
	Если ОрганизацииДокументов.Количество() = 1 Тогда
		
		Организация = ОрганизацииДокументов[0];
		
		РезультатПроверки.Организация = Организация;
		
		ТаблицаДатДокументов = ТаблицаОрганизацийДокументов.Скопировать(Новый Структура("Организация", Организация));
		ТаблицаДатДокументов.Сортировать("Дата Убыв");
		ДатаПроверки = ТаблицаДатДокументов[0].Дата;
		
		Если ФаксимилеДоступноДляВывода Тогда
			
			НужноЗаполнить = Не ЗаполненыПечатьИПодписи(Организация,
				ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("ФайлПечать"),
				ДатаПроверки);
		
			Если НужноЗаполнить Тогда
				НужноЗаполнить = Не ЗаполненыПечатьИПодписи(Организация,
					ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("ФайлФаксимильнаяПечать"));
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	РезультатПроверки.НужноЗаполнить      = НужноЗаполнить;
	РезультатПроверки.ПредложитьНастроить = НужноЗаполнить 
											И ПравоДоступа("Редактирование", Метаданные.Справочники.Организации);
	
	Возврат РезультатПроверки;
	
КонецФункции

&НаСервере
Функция ОрганизацииДокументовДляПечати(МассивДокументов)
	
	Организации = Новый ТаблицаЗначений;
	Организации.Колонки.Добавить("Организация");
	Организации.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата",,, Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	
	Если МассивДокументов.Количество() = 0 Тогда
		Возврат Организации;
	КонецЕсли;
	
	МетаданныеДокумента = МассивДокументов[0].Метаданные();
	Если НЕ Метаданные.Документы.Содержит(МетаданныеДокумента) Тогда
		Возврат Организации;
	КонецЕсли;
		
	МетаданныеИмя = МетаданныеДокумента.ПолноеИмя();
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("ОрганизацияПолучатель", МетаданныеДокумента) Тогда
		ИмяРеквизита = "ОрганизацияПолучатель";
	Иначе
		ИмяРеквизита = "Организация";
	КонецЕсли;
	
	СхемаЗапроса = Новый СхемаЗапроса;
	
	ПакетЗапроса = СхемаЗапроса.ПакетЗапросов[0];
	Оператор = ПакетЗапроса.Операторы[0];
	Оператор.Источники.Добавить(МетаданныеИмя, "Документ");
	Оператор.ВыбиратьРазличные = Истина;
	Оператор.ВыбираемыеПоля.Добавить("Документ." + ИмяРеквизита);
	Оператор.ВыбираемыеПоля.Добавить("Документ.Дата");
	ПакетЗапроса.Колонки[0].Псевдоним = "Организация";
	ПакетЗапроса.Колонки[1].Псевдоним = "Дата";
	Оператор.Отбор.Добавить("Документ.Ссылка В(&Документы)");
	
	Запрос = Новый Запрос;
	Запрос.Текст = СхемаЗапроса.ПолучитьТекстЗапроса();
	Запрос.УстановитьПараметр("Документы", МассивДокументов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Организации.Добавить(), Выборка);
	КонецЦикла;
	
	Организации.Свернуть("Организация, Дата");
	
	Возврат Организации;
	
КонецФункции

&НаСервере
Функция ЗаполненыПечатьИПодписи(Организация, ПроверяемыеРеквизиты, ДатаПроверки = Неопределено)
	
	РеквизитыЗаполнены = Ложь;
	
	Если ЗначениеЗаполнено(Организация) И ПроверяемыеРеквизиты.Количество() <> 0 Тогда
		
		ЗначенияРеквизитовОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Организация,
			Новый ФиксированныйМассив(ПроверяемыеРеквизиты));
		
		Для Каждого Реквизит Из ЗначенияРеквизитовОрганизации Цикл
			Если НЕ Реквизит.Значение.Пустая() Тогда
				РеквизитыЗаполнены = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Если НЕ РеквизитыЗаполнены И ДатаПроверки <> Неопределено Тогда
		Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Организация, ДатаПроверки);
		Если ЗначениеЗаполнено(Руководители.Руководитель) Тогда
			РеквизитыЗаполнены = ЗначениеЗаполнено(УправлениеПечатьюБП.ПрисоединенныйФайлФаксимилеФизическогоЛица(Руководители.Руководитель));
		КонецЕсли;
		Если ЗначениеЗаполнено(Руководители.ГлавныйБухгалтер) Тогда
			РеквизитыЗаполнены = ЗначениеЗаполнено(УправлениеПечатьюБП.ПрисоединенныйФайлФаксимилеФизическогоЛица(Руководители.ГлавныйБухгалтер));
		КонецЕсли;
	КонецЕсли;
	
	Возврат РеквизитыЗаполнены;
	
КонецФункции

&НаСервере
Процедура ДобавитьПодписиИПечати(ПечатныеФормы, ОбъектыПечати)
	
	Если Не ВывестиПечатьИПодписи Тогда
		Возврат;
	КонецЕсли;
	
	ПодписиИПечатиОбластей = УправлениеПечатью.ПодписиИПечатиОбластей(ОбъектыПечати);
	
	Для Каждого ТабличныйДокумент Из ПечатныеФормы.ТабличныеДокументы Цикл
		УправлениеПечатью.ДобавитьПодписьИПечать(ТабличныйДокумент.Значение, ПодписиИПечатиОбластей);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СохранениеПакета

&НаКлиенте
Процедура СохранитьФайлПакета(ИмяФайла, ТабличныеДокументы, ОбъектыПечати)
	
	Пакет = Новый ПакетОтображаемыхДокументов;
	Пакет.КоличествоЭкземпляров = 1;
	
	Для Каждого ТабличныйДокумент Из ТабличныеДокументы Цикл
		ЭлементПакета = Пакет.Состав.Добавить();
		ЭлементПакета.Данные = ПоместитьВоВременноеХранилище(ТабличныйДокумент.Значение, УникальныйИдентификатор);
	КонецЦикла;
	
	Пакет.ЗаписатьФайлДляПечати(ИмяФайла);
	
КонецПроцедуры

&НаСервере
Функция ИмяФайла(Документ)
	
	// см. функцию ИмяФайла() в модуле объекта внешней обработки.
	Возврат РеквизитФормыВЗначение("Объект").ИмяФайла(ПутьКФайлам, Документ, КомплектПечатныхФорм);
	
КонецФункции

&НаКлиенте
Процедура ПутьКФайламЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПутьКФайлам = Результат[0];
	
КонецПроцедуры

&НаСервере
Процедура СортироватьТаблицуПечатныхФормПоУмолчанию(ТаблицаПечатныхФорм)
	
	// см. функцию СортироватьТаблицуПечатныхФормПоУмолчанию() в модуле объекта внешней обработки.
	РеквизитФормыВЗначение("Объект").СортироватьТаблицуПечатныхФормПоУмолчанию(ТаблицаПечатныхФорм);
	
КонецПроцедуры

#КонецОбласти

#Область СохранениеПутейКФайлам

&НаСервере
Процедура ОграничитьМассивПутей(МассивПутей)
	
	КоличествоЭлементовВМассиве = МассивПутей.Количество();
	КоличествоОбъектовИстории = КоличествоОбъектовИстории();
	Если КоличествоЭлементовВМассиве <= КоличествоОбъектовИстории Тогда
		Возврат;
	КонецЕсли;
	
	Для ОбратныйИндекс = -МассивПутей.ВГраница() По 0 Цикл
		// Удалим все элементы истории, с индексом больше чем мы храним
		Если -ОбратныйИндекс > КоличествоОбъектовИстории-1 Тогда
			МассивПутей.Удалить(-ОбратныйИндекс);
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИсториюВыбораПоУмолчанию()
	
	МассивЗначений = Элементы.ПутьКФайлам.СписокВыбора.ВыгрузитьЗначения();
	МассивЗначений.Добавить(КаталогДокументов());
	Если Не ПустаяСтрока(ПутьКФайлам) Тогда
		МассивЗначений.Добавить(ПутьКФайлам);
	КонецЕсли;
	ПутьКФайлам = МассивЗначений[0]; // Установим первый элемент
	Элементы.ПутьКФайлам.СписокВыбора.ЗагрузитьЗначения(МассивЗначений);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораПапкиДляСохранения(ОбъектыНазначения)
	
	Если ОбъектыНазначения.Количество() > 0 Тогда
		ОбъектПечати = ОбъектыНазначения[0];
		КлючНастройкиСохраненияПутей = Метаданные.НайтиПоТипу(ТипЗнч(ОбъектПечати)).Имя;
	Иначе
		КлючНастройкиСохраненияПутей = "ОбщиеОбъекты";
	КонецЕсли;
	
	СтруктураПутей = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		ИмяНастройкиХраненияФайлов(),
		ИмяКлючНастройкиХраненияФайлов(),
		Неопределено);
		
	Если СтруктураПутей = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ СтруктураПутей.Свойство(КлючНастройкиСохраненияПутей) Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ПутьКФайлам.СписокВыбора.ЗагрузитьЗначения(СтруктураПутей[КлючНастройкиСохраненияПутей]);
	
КонецПроцедуры

&НаСервере
Функция ИмяНастройкиХраненияФайлов()

	Возврат "Расширение_ХранениеПутейКФайлам";

КонецФункции

&НаСервере
Функция ИмяКлючНастройкиХраненияФайлов()

	Возврат "МассивПутей";

КонецФункции

&НаСервере
Функция КоличествоОбъектовИстории()

	Возврат 5;

КонецФункции

&НаСервере
Процедура СохранитьПутьКФайламНаСервере()
	
	СтруктураПутей = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		ИмяНастройкиХраненияФайлов(),
		ИмяКлючНастройкиХраненияФайлов(),
		Новый Структура);
		
	Если СтруктураПутей.Свойство(КлючНастройкиСохраненияПутей) Тогда
		МассивПутей = СтруктураПутей[КлючНастройкиСохраненияПутей];
	Иначе
		МассивПутей = Новый Массив;
	КонецЕсли;
	
	Для ОбратныйИндекс = -МассивПутей.ВГраница() По 0 Цикл
		// Удалим выбранный путь из массива, чтобы потом переставить его вначало
		Если МассивПутей[-ОбратныйИндекс] = ПутьКФайлам Тогда
			МассивПутей.Удалить(-ОбратныйИндекс);
			// Считаем, что в массиве у нас только уникальные пути, поэтому не продолжаем дальнейший поиск
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	// Последний использованный путь всегда становится первым, вытесняя последующие
	МассивПутей.Вставить(0, ПутьКФайлам);
	ОграничитьМассивПутей(МассивПутей);
	СтруктураПутей.Вставить(КлючНастройкиСохраненияПутей, МассивПутей);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
		ИмяНастройкиХраненияФайлов(),
		ИмяКлючНастройкиХраненияФайлов(),
		СтруктураПутей);
	
КонецПроцедуры

#КонецОбласти

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Форма.Элементы.ОткрытьФайлыПослеСохранения.Доступность = Не Форма.Предпросмотр
	
КонецПроцедуры

&НаКлиенте
Функция ПодготовитьНастройкиДляПечати()

	ИменаМакетов = "";
	СохраняемыеНастройкиПечатныхФорм = Новый Массив;
	Индекс = 0;
	Для Каждого ПечатнаяФорма Из КомплектПечатныхФорм Цикл
		Если ПечатнаяФорма.Печатать Тогда
			Если ПечатнаяФорма.Копий = 0 Тогда
				ПечатнаяФорма.Копий = 1;
			КонецЕсли;
			Если ПечатнаяФорма.МенеджерПечати <> ТипОбъекта Тогда
				Если ПечатнаяФорма.МенеджерПечати = "СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки" Тогда
					ИмяМакета = "ВнешняяПечатнаяФорма." + ПечатнаяФорма.Имя;
				Иначе
					ИмяМакета = ПечатнаяФорма.МенеджерПечати + "." + ПечатнаяФорма.Имя;
				КонецЕсли;
			Иначе
				ИмяМакета = ПечатнаяФорма.Имя;
			КонецЕсли;
			Если ПечатнаяФорма.Имя = "СчетФактураКомплект" Тогда
				КоличествоМакетовСчетовФактур = КоличествоМакетовСчетовФактур();
				Если КоличествоМакетовСчетовФактур > 1 Тогда
					Для Счетчик = 1 По КоличествоМакетовСчетовФактур - 1 Цикл
						СохраняемаяНастройка = Новый Структура;
						СохраняемаяНастройка.Вставить("ИмяМакета", ПечатнаяФорма.Имя);
						СохраняемаяНастройка.Вставить("Количество", ПечатнаяФорма.Копий);
						СохраняемаяНастройка.Вставить("ПозицияПоУмолчанию", Индекс);
						СохраняемыеНастройкиПечатныхФорм.Добавить(СохраняемаяНастройка);
						Индекс = Индекс + 1;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
			СохраняемаяНастройка = Новый Структура;
			СохраняемаяНастройка.Вставить("ИмяМакета", ПечатнаяФорма.Имя);
			СохраняемаяНастройка.Вставить("Количество", ПечатнаяФорма.Копий);
			СохраняемаяНастройка.Вставить("ПозицияПоУмолчанию", Индекс);
			СохраняемыеНастройкиПечатныхФорм.Добавить(СохраняемаяНастройка);
			Индекс = Индекс + 1;

			// Для печати сразу на принтер строка с именами макетов
			// должна содержать столько имен макетов, сколько копий требуется напечатать.
			КоличествоМакетовДляПечати = ?(Предпросмотр, ПечатнаяФорма.Копий, 1);
			Для Сч =1 по КоличествоМакетовДляПечати Цикл
				ИменаМакетов = ИменаМакетов +"," + ИмяМакета;
			КонецЦикла;
			
		КонецЕсли;
	КонецЦикла;
	
	ИменаМакетов = Сред(ИменаМакетов, 2);
	
	// Сохранение настроек
	КлючНастроекПечати = ТипОбъекта + "-" + ИменаМакетов;
	Если Не ПустаяСтрока(ИменаМакетов) Тогда
		СохранитьНастройкиПечатныхФорм("НастройкиПечатныхФорм",КлючНастроекПечати, СохраняемыеНастройкиПечатныхФорм);
	КонецЕсли;
	
	Возврат ИменаМакетов;

КонецФункции

&НаСервере
Процедура ВосстановитьНастройкиПечатныхФорм(СохраненныеНастройкиПечатныхФорм, ИмяФормы)

	Если СохраненныеНастройкиПечатныхФорм = Неопределено
		ИЛИ (ТипЗнч(СохраненныеНастройкиПечатныхФорм) = Тип("Массив")
				И СохраненныеНастройкиПечатныхФорм.Количество() = 0) Тогда
		ВосстановитьНастройкиПечатныхФормПоУмолчанию(ИмяФормы);
	КонецЕсли;
	
	Для Каждого СохраненнаяНастройка Из СохраненныеНастройкиПечатныхФорм Цикл
		НайденныеНастройки = КомплектПечатныхФорм.НайтиСтроки(Новый Структура("Имя", СохраненнаяНастройка.Имя));
		Для Каждого НастройкаПечатнойФормы Из НайденныеНастройки Цикл
			НастройкаПечатнойФормы.Копий = СохраненнаяНастройка.Копий;
			НастройкаПечатнойФормы.Печатать = СохраненнаяНастройка.Печатать;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройкиПечатныхФормПоУмолчанию(ИмяФормы)

	Если ТипОбъекта = "Документ.РеализацияТоваровУслуг" Тогда
		
		Если ИмяФормы = "Документ.РеализацияТоваровУслуг.Форма.ФормаДокументаУслуги" Тогда
			НайденныеНастройки =
				КомплектПечатныхФорм.НайтиСтроки(Новый Структура("Имя", "Акт"));
			Для Каждого НастройкаПечатнойФормы Из НайденныеНастройки Цикл
				НастройкаПечатнойФормы.Копий = 2;
				НастройкаПечатнойФормы.Печатать = Истина;
			КонецЦикла;
			НайденныеНастройки =
				КомплектПечатныхФорм.НайтиСтроки(Новый Структура("Имя", "СчетФактураКомплект"));
			Для Каждого НастройкаПечатнойФормы Из НайденныеНастройки Цикл
				НастройкаПечатнойФормы.Копий = 2;
				НастройкаПечатнойФормы.Печатать = Истина;
			КонецЦикла;
		ИначеЕсли ИмяФормы = "Документ.РеализацияТоваровУслуг.Форма.ФормаДокументаТовары" Тогда
			НайденныеНастройки =
				КомплектПечатныхФорм.НайтиСтроки(Новый Структура("Имя", "ТОРГ12_БезУслуг"));
			Для Каждого НастройкаПечатнойФормы Из НайденныеНастройки Цикл
				НастройкаПечатнойФормы.Копий = 2;
				НастройкаПечатнойФормы.Печатать = Истина;
			КонецЦикла;
			НайденныеНастройки =
				КомплектПечатныхФорм.НайтиСтроки(Новый Структура("Имя", "СчетФактураКомплект"));
			Для Каждого НастройкаПечатнойФормы Из НайденныеНастройки Цикл
				НастройкаПечатнойФормы.Копий = 2;
				НастройкаПечатнойФормы.Печатать = Истина;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьНастройкиПечатныхФорм(КлючОбъекта, КлючНастроек, СохраняемыеНастройкиПечатныхФорм)

	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(КлючОбъекта, КлючНастроек, СохраняемыеНастройкиПечатныхФорм);

КонецПроцедуры

&НаКлиенте
Функция КоличествоМакетовСчетовФактур()
	
	НастройкиПечати = УчетНДСВызовСервера.ПолучитьНастройкиПечатиСчетовФактур(Объекты.ВыгрузитьЗначения());
	СписокМакетов = НастройкиПечати.СписокМакетов;
	МассивМакетов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(НастройкиПечати.СписокМакетов);
	Возврат МассивМакетов.Количество();
	
КонецФункции

&НаКлиенте
Функция ТекущаяНастройкаПечатнойФормы()
	
	Результат = Элементы.КомплектПечатныхФорм.ТекущиеДанные;
	Если Результат = Неопределено И КомплектПечатныхФорм.Количество() > 0 Тогда
		Результат = КомплектПечатныхФорм[0];
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти